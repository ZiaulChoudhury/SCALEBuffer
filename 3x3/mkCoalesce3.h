/*
 * Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
 * 
 * On Tue May  9 19:06:16 IST 2023
 * 
 */

/* Generation options: */
#ifndef __mkCoalesce3_h__
#define __mkCoalesce3_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkCoalesce3 module */
class MOD_mkCoalesce3 : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt64> INST__unnamed_;
  MOD_Reg<tUInt64> INST__unnamed__0_1;
  MOD_Reg<tUInt64> INST__unnamed__1;
  MOD_Reg<tUInt64> INST__unnamed__1_1;
  MOD_Reg<tUInt64> INST__unnamed__2;
  MOD_Reg<tUInt64> INST__unnamed__2_1;
  MOD_Reg<tUInt64> INST__unnamed__3;
  MOD_Reg<tUInt64> INST__unnamed__3_1;
  MOD_Reg<tUInt64> INST__unnamed__4;
  MOD_Reg<tUInt64> INST__unnamed__4_1;
  MOD_Reg<tUInt64> INST__unnamed__5;
  MOD_Reg<tUInt64> INST__unnamed__5_1;
  MOD_Reg<tUInt64> INST__unnamed__6;
  MOD_Reg<tUInt64> INST__unnamed__6_1;
  MOD_Reg<tUInt64> INST__unnamed__7;
  MOD_Reg<tUInt64> INST__unnamed__7_1;
  MOD_Reg<tUInt8> INST_count;
  MOD_Fifo<tUInt64> INST_inQ;
  MOD_Reg<tUInt8> INST_kernel;
  MOD_CReg<tUInt8> INST_p0_rv;
  MOD_CReg<tUInt8> INST_p1_rv;
  MOD_CReg<tUInt8> INST_p2_rv;
  MOD_CReg<tUInt8> INST_p3_rv;
  MOD_Reg<tUInt32> INST_shift_amount;
  MOD_Reg<tUInt8> INST_window2_0_0;
  MOD_Reg<tUInt8> INST_window2_0_1;
  MOD_Reg<tUInt8> INST_window2_0_2;
  MOD_Reg<tUInt8> INST_window2_0_3;
  MOD_Reg<tUInt8> INST_window2_0_4;
  MOD_Reg<tUInt8> INST_window2_0_5;
  MOD_Reg<tUInt8> INST_window2_0_6;
  MOD_Reg<tUInt8> INST_window2_0_7;
  MOD_Reg<tUInt8> INST_window2_1_0;
  MOD_Reg<tUInt8> INST_window2_1_1;
  MOD_Reg<tUInt8> INST_window2_1_2;
  MOD_Reg<tUInt8> INST_window2_1_3;
  MOD_Reg<tUInt8> INST_window2_1_4;
  MOD_Reg<tUInt8> INST_window2_1_5;
  MOD_Reg<tUInt8> INST_window2_1_6;
  MOD_Reg<tUInt8> INST_window2_1_7;
  MOD_Reg<tUInt8> INST_window2_2_0;
  MOD_Reg<tUInt8> INST_window2_2_1;
  MOD_Reg<tUInt8> INST_window2_2_2;
  MOD_Reg<tUInt8> INST_window2_2_3;
  MOD_Reg<tUInt8> INST_window2_2_4;
  MOD_Reg<tUInt8> INST_window2_2_5;
  MOD_Reg<tUInt8> INST_window2_2_6;
  MOD_Reg<tUInt8> INST_window2_2_7;
  MOD_Reg<tUInt8> INST_window2_3_0;
  MOD_Reg<tUInt8> INST_window2_3_1;
  MOD_Reg<tUInt8> INST_window2_3_2;
  MOD_Reg<tUInt8> INST_window2_3_3;
  MOD_Reg<tUInt8> INST_window2_3_4;
  MOD_Reg<tUInt8> INST_window2_3_5;
  MOD_Reg<tUInt8> INST_window2_3_6;
  MOD_Reg<tUInt8> INST_window2_3_7;
  MOD_Reg<tUInt8> INST_window2_4_0;
  MOD_Reg<tUInt8> INST_window2_4_1;
  MOD_Reg<tUInt8> INST_window2_4_2;
  MOD_Reg<tUInt8> INST_window2_4_3;
  MOD_Reg<tUInt8> INST_window2_4_4;
  MOD_Reg<tUInt8> INST_window2_4_5;
  MOD_Reg<tUInt8> INST_window2_4_6;
  MOD_Reg<tUInt8> INST_window2_4_7;
  MOD_Reg<tUInt8> INST_window2_5_0;
  MOD_Reg<tUInt8> INST_window2_5_1;
  MOD_Reg<tUInt8> INST_window2_5_2;
  MOD_Reg<tUInt8> INST_window2_5_3;
  MOD_Reg<tUInt8> INST_window2_5_4;
  MOD_Reg<tUInt8> INST_window2_5_5;
  MOD_Reg<tUInt8> INST_window2_5_6;
  MOD_Reg<tUInt8> INST_window2_5_7;
  MOD_Reg<tUInt8> INST_window2_6_0;
  MOD_Reg<tUInt8> INST_window2_6_1;
  MOD_Reg<tUInt8> INST_window2_6_2;
  MOD_Reg<tUInt8> INST_window2_6_3;
  MOD_Reg<tUInt8> INST_window2_6_4;
  MOD_Reg<tUInt8> INST_window2_6_5;
  MOD_Reg<tUInt8> INST_window2_6_6;
  MOD_Reg<tUInt8> INST_window2_6_7;
  MOD_Reg<tUInt8> INST_window2_7_0;
  MOD_Reg<tUInt8> INST_window2_7_1;
  MOD_Reg<tUInt8> INST_window2_7_2;
  MOD_Reg<tUInt8> INST_window2_7_3;
  MOD_Reg<tUInt8> INST_window2_7_4;
  MOD_Reg<tUInt8> INST_window2_7_5;
  MOD_Reg<tUInt8> INST_window2_7_6;
  MOD_Reg<tUInt8> INST_window2_7_7;
  MOD_Reg<tUInt8> INST_window_0_0;
  MOD_Reg<tUInt8> INST_window_0_1;
  MOD_Reg<tUInt8> INST_window_0_2;
  MOD_Reg<tUInt8> INST_window_0_3;
  MOD_Reg<tUInt8> INST_window_0_4;
  MOD_Reg<tUInt8> INST_window_0_5;
  MOD_Reg<tUInt8> INST_window_0_6;
  MOD_Reg<tUInt8> INST_window_0_7;
  MOD_Reg<tUInt8> INST_window_1_0;
  MOD_Reg<tUInt8> INST_window_1_1;
  MOD_Reg<tUInt8> INST_window_1_2;
  MOD_Reg<tUInt8> INST_window_1_3;
  MOD_Reg<tUInt8> INST_window_1_4;
  MOD_Reg<tUInt8> INST_window_1_5;
  MOD_Reg<tUInt8> INST_window_1_6;
  MOD_Reg<tUInt8> INST_window_1_7;
  MOD_Reg<tUInt8> INST_window_2_0;
  MOD_Reg<tUInt8> INST_window_2_1;
  MOD_Reg<tUInt8> INST_window_2_2;
  MOD_Reg<tUInt8> INST_window_2_3;
  MOD_Reg<tUInt8> INST_window_2_4;
  MOD_Reg<tUInt8> INST_window_2_5;
  MOD_Reg<tUInt8> INST_window_2_6;
  MOD_Reg<tUInt8> INST_window_2_7;
  MOD_Reg<tUInt8> INST_window_3_0;
  MOD_Reg<tUInt8> INST_window_3_1;
  MOD_Reg<tUInt8> INST_window_3_2;
  MOD_Reg<tUInt8> INST_window_3_3;
  MOD_Reg<tUInt8> INST_window_3_4;
  MOD_Reg<tUInt8> INST_window_3_5;
  MOD_Reg<tUInt8> INST_window_3_6;
  MOD_Reg<tUInt8> INST_window_3_7;
  MOD_Reg<tUInt8> INST_window_4_0;
  MOD_Reg<tUInt8> INST_window_4_1;
  MOD_Reg<tUInt8> INST_window_4_2;
  MOD_Reg<tUInt8> INST_window_4_3;
  MOD_Reg<tUInt8> INST_window_4_4;
  MOD_Reg<tUInt8> INST_window_4_5;
  MOD_Reg<tUInt8> INST_window_4_6;
  MOD_Reg<tUInt8> INST_window_4_7;
  MOD_Reg<tUInt8> INST_window_5_0;
  MOD_Reg<tUInt8> INST_window_5_1;
  MOD_Reg<tUInt8> INST_window_5_2;
  MOD_Reg<tUInt8> INST_window_5_3;
  MOD_Reg<tUInt8> INST_window_5_4;
  MOD_Reg<tUInt8> INST_window_5_5;
  MOD_Reg<tUInt8> INST_window_5_6;
  MOD_Reg<tUInt8> INST_window_5_7;
  MOD_Reg<tUInt8> INST_window_6_0;
  MOD_Reg<tUInt8> INST_window_6_1;
  MOD_Reg<tUInt8> INST_window_6_2;
  MOD_Reg<tUInt8> INST_window_6_3;
  MOD_Reg<tUInt8> INST_window_6_4;
  MOD_Reg<tUInt8> INST_window_6_5;
  MOD_Reg<tUInt8> INST_window_6_6;
  MOD_Reg<tUInt8> INST_window_6_7;
  MOD_Reg<tUInt8> INST_window_7_0;
  MOD_Reg<tUInt8> INST_window_7_1;
  MOD_Reg<tUInt8> INST_window_7_2;
  MOD_Reg<tUInt8> INST_window_7_3;
  MOD_Reg<tUInt8> INST_window_7_4;
  MOD_Reg<tUInt8> INST_window_7_5;
  MOD_Reg<tUInt8> INST_window_7_6;
  MOD_Reg<tUInt8> INST_window_7_7;
 
 /* Constructor */
 public:
  MOD_mkCoalesce3(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_get;
 
 /* Publicly accessible definitions */
 public:
 
 /* Local definitions */
 private:
  tUInt64 DEF__unnamed__7_1__h25441;
  tUInt64 DEF__unnamed__6_1__h24361;
  tUInt64 DEF__unnamed__5_1__h23281;
  tUInt64 DEF__unnamed__4_1__h22201;
  tUInt64 DEF__unnamed__3_1__h21121;
  tUInt64 DEF__unnamed__2_1__h20041;
  tUInt64 DEF__unnamed__1_1__h18961;
  tUInt64 DEF__unnamed__0_1__h17881;
  tUWide DEF_window_7_7_46_CONCAT_window_7_6_47_CONCAT_wind_ETC___d216;
  tUWide DEF_window_7_7_46_CONCAT_window_7_6_47_CONCAT_wind_ETC___d192;
  tUWide DEF_window_7_7_46_CONCAT_window_7_6_47_CONCAT_wind_ETC___d168;
  tUInt8 DEF__0_CONCAT_DONTCARE___d69;
 
 /* Rules */
 public:
  void RL__Q1();
  void RL__activate1();
  void RL__activate2();
  void RL_fill_window();
 
 /* Methods */
 public:
  void METH_put(tUInt64 ARG_put_datas);
  tUInt8 METH_RDY_put();
  void METH_configure(tUInt32 ARG_configure_shift, tUInt8 ARG_configure_ker);
  tUInt8 METH_RDY_configure();
  tUWide METH_get();
  tUInt8 METH_RDY_get();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkCoalesce3 &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkCoalesce3 &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkCoalesce3 &backing);
};

#endif /* ifndef __mkCoalesce3_h__ */
