//
// Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
//
// On Tue May  9 17:54:30 IST 2023
//
//
// Ports:
// Name                         I/O  size props
// RDY_put                        O     1 reg
// RDY_configure                  O     1 const
// get                            O   512 reg
// RDY_get                        O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// put_datas                      I    64 reg
// configure_shift                I    10 reg
// configure_ker                  I     4 reg
// EN_put                         I     1
// EN_configure                   I     1
// EN_get                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCoalesce3(CLK,
		   RST_N,

		   put_datas,
		   EN_put,
		   RDY_put,

		   configure_shift,
		   configure_ker,
		   EN_configure,
		   RDY_configure,

		   EN_get,
		   get,
		   RDY_get);
  input  CLK;
  input  RST_N;

  // action method put
  input  [63 : 0] put_datas;
  input  EN_put;
  output RDY_put;

  // action method configure
  input  [9 : 0] configure_shift;
  input  [3 : 0] configure_ker;
  input  EN_configure;
  output RDY_configure;

  // actionvalue method get
  input  EN_get;
  output [511 : 0] get;
  output RDY_get;

  // signals for module outputs
  wire [511 : 0] get;
  wire RDY_configure, RDY_get, RDY_put;

  // inlined wires
  wire [1 : 0] p0_rv$port1__read,
	       p0_rv$port2__read,
	       p1_rv$port1__read,
	       p1_rv$port2__read,
	       p2_rv$port1__read,
	       p2_rv$port2__read;
  wire p0_rv$EN_port0__write,
       p0_rv$EN_port1__write,
       p1_rv$EN_port0__write,
       p1_rv$EN_port1__write,
       p2_rv$EN_port1__write;

  // register _unnamed_
  reg [63 : 0] _unnamed_;
  wire [63 : 0] _unnamed_$D_IN;
  wire _unnamed_$EN;

  // register _unnamed__0_1
  reg [63 : 0] _unnamed__0_1;
  wire [63 : 0] _unnamed__0_1$D_IN;
  wire _unnamed__0_1$EN;

  // register _unnamed__1
  reg [63 : 0] _unnamed__1;
  wire [63 : 0] _unnamed__1$D_IN;
  wire _unnamed__1$EN;

  // register _unnamed__1_1
  reg [63 : 0] _unnamed__1_1;
  wire [63 : 0] _unnamed__1_1$D_IN;
  wire _unnamed__1_1$EN;

  // register _unnamed__2
  reg [63 : 0] _unnamed__2;
  wire [63 : 0] _unnamed__2$D_IN;
  wire _unnamed__2$EN;

  // register _unnamed__2_1
  reg [63 : 0] _unnamed__2_1;
  wire [63 : 0] _unnamed__2_1$D_IN;
  wire _unnamed__2_1$EN;

  // register _unnamed__3
  reg [63 : 0] _unnamed__3;
  wire [63 : 0] _unnamed__3$D_IN;
  wire _unnamed__3$EN;

  // register _unnamed__3_1
  reg [63 : 0] _unnamed__3_1;
  wire [63 : 0] _unnamed__3_1$D_IN;
  wire _unnamed__3_1$EN;

  // register _unnamed__4
  reg [63 : 0] _unnamed__4;
  wire [63 : 0] _unnamed__4$D_IN;
  wire _unnamed__4$EN;

  // register _unnamed__4_1
  reg [63 : 0] _unnamed__4_1;
  wire [63 : 0] _unnamed__4_1$D_IN;
  wire _unnamed__4_1$EN;

  // register _unnamed__5
  reg [63 : 0] _unnamed__5;
  wire [63 : 0] _unnamed__5$D_IN;
  wire _unnamed__5$EN;

  // register _unnamed__5_1
  reg [63 : 0] _unnamed__5_1;
  wire [63 : 0] _unnamed__5_1$D_IN;
  wire _unnamed__5_1$EN;

  // register _unnamed__6
  reg [63 : 0] _unnamed__6;
  wire [63 : 0] _unnamed__6$D_IN;
  wire _unnamed__6$EN;

  // register _unnamed__6_1
  reg [63 : 0] _unnamed__6_1;
  wire [63 : 0] _unnamed__6_1$D_IN;
  wire _unnamed__6_1$EN;

  // register _unnamed__7
  reg [63 : 0] _unnamed__7;
  wire [63 : 0] _unnamed__7$D_IN;
  wire _unnamed__7$EN;

  // register _unnamed__7_1
  reg [63 : 0] _unnamed__7_1;
  wire [63 : 0] _unnamed__7_1$D_IN;
  wire _unnamed__7_1$EN;

  // register count
  reg [3 : 0] count;
  wire [3 : 0] count$D_IN;
  wire count$EN;

  // register kernel
  reg [3 : 0] kernel;
  wire [3 : 0] kernel$D_IN;
  wire kernel$EN;

  // register p0_rv
  reg [1 : 0] p0_rv;
  wire [1 : 0] p0_rv$D_IN;
  wire p0_rv$EN;

  // register p1_rv
  reg [1 : 0] p1_rv;
  wire [1 : 0] p1_rv$D_IN;
  wire p1_rv$EN;

  // register p2_rv
  reg [1 : 0] p2_rv;
  wire [1 : 0] p2_rv$D_IN;
  wire p2_rv$EN;

  // register p3_rv
  reg [1 : 0] p3_rv;
  wire [1 : 0] p3_rv$D_IN;
  wire p3_rv$EN;

  // register shift_amount
  reg [9 : 0] shift_amount;
  wire [9 : 0] shift_amount$D_IN;
  wire shift_amount$EN;

  // register window2_0_0
  reg [7 : 0] window2_0_0;
  wire [7 : 0] window2_0_0$D_IN;
  wire window2_0_0$EN;

  // register window2_0_1
  reg [7 : 0] window2_0_1;
  wire [7 : 0] window2_0_1$D_IN;
  wire window2_0_1$EN;

  // register window2_0_2
  reg [7 : 0] window2_0_2;
  wire [7 : 0] window2_0_2$D_IN;
  wire window2_0_2$EN;

  // register window2_0_3
  reg [7 : 0] window2_0_3;
  wire [7 : 0] window2_0_3$D_IN;
  wire window2_0_3$EN;

  // register window2_0_4
  reg [7 : 0] window2_0_4;
  wire [7 : 0] window2_0_4$D_IN;
  wire window2_0_4$EN;

  // register window2_0_5
  reg [7 : 0] window2_0_5;
  wire [7 : 0] window2_0_5$D_IN;
  wire window2_0_5$EN;

  // register window2_0_6
  reg [7 : 0] window2_0_6;
  wire [7 : 0] window2_0_6$D_IN;
  wire window2_0_6$EN;

  // register window2_0_7
  reg [7 : 0] window2_0_7;
  wire [7 : 0] window2_0_7$D_IN;
  wire window2_0_7$EN;

  // register window2_1_0
  reg [7 : 0] window2_1_0;
  wire [7 : 0] window2_1_0$D_IN;
  wire window2_1_0$EN;

  // register window2_1_1
  reg [7 : 0] window2_1_1;
  wire [7 : 0] window2_1_1$D_IN;
  wire window2_1_1$EN;

  // register window2_1_2
  reg [7 : 0] window2_1_2;
  wire [7 : 0] window2_1_2$D_IN;
  wire window2_1_2$EN;

  // register window2_1_3
  reg [7 : 0] window2_1_3;
  wire [7 : 0] window2_1_3$D_IN;
  wire window2_1_3$EN;

  // register window2_1_4
  reg [7 : 0] window2_1_4;
  wire [7 : 0] window2_1_4$D_IN;
  wire window2_1_4$EN;

  // register window2_1_5
  reg [7 : 0] window2_1_5;
  wire [7 : 0] window2_1_5$D_IN;
  wire window2_1_5$EN;

  // register window2_1_6
  reg [7 : 0] window2_1_6;
  wire [7 : 0] window2_1_6$D_IN;
  wire window2_1_6$EN;

  // register window2_1_7
  reg [7 : 0] window2_1_7;
  wire [7 : 0] window2_1_7$D_IN;
  wire window2_1_7$EN;

  // register window2_2_0
  reg [7 : 0] window2_2_0;
  wire [7 : 0] window2_2_0$D_IN;
  wire window2_2_0$EN;

  // register window2_2_1
  reg [7 : 0] window2_2_1;
  wire [7 : 0] window2_2_1$D_IN;
  wire window2_2_1$EN;

  // register window2_2_2
  reg [7 : 0] window2_2_2;
  wire [7 : 0] window2_2_2$D_IN;
  wire window2_2_2$EN;

  // register window2_2_3
  reg [7 : 0] window2_2_3;
  wire [7 : 0] window2_2_3$D_IN;
  wire window2_2_3$EN;

  // register window2_2_4
  reg [7 : 0] window2_2_4;
  wire [7 : 0] window2_2_4$D_IN;
  wire window2_2_4$EN;

  // register window2_2_5
  reg [7 : 0] window2_2_5;
  wire [7 : 0] window2_2_5$D_IN;
  wire window2_2_5$EN;

  // register window2_2_6
  reg [7 : 0] window2_2_6;
  wire [7 : 0] window2_2_6$D_IN;
  wire window2_2_6$EN;

  // register window2_2_7
  reg [7 : 0] window2_2_7;
  wire [7 : 0] window2_2_7$D_IN;
  wire window2_2_7$EN;

  // register window2_3_0
  reg [7 : 0] window2_3_0;
  wire [7 : 0] window2_3_0$D_IN;
  wire window2_3_0$EN;

  // register window2_3_1
  reg [7 : 0] window2_3_1;
  wire [7 : 0] window2_3_1$D_IN;
  wire window2_3_1$EN;

  // register window2_3_2
  reg [7 : 0] window2_3_2;
  wire [7 : 0] window2_3_2$D_IN;
  wire window2_3_2$EN;

  // register window2_3_3
  reg [7 : 0] window2_3_3;
  wire [7 : 0] window2_3_3$D_IN;
  wire window2_3_3$EN;

  // register window2_3_4
  reg [7 : 0] window2_3_4;
  wire [7 : 0] window2_3_4$D_IN;
  wire window2_3_4$EN;

  // register window2_3_5
  reg [7 : 0] window2_3_5;
  wire [7 : 0] window2_3_5$D_IN;
  wire window2_3_5$EN;

  // register window2_3_6
  reg [7 : 0] window2_3_6;
  wire [7 : 0] window2_3_6$D_IN;
  wire window2_3_6$EN;

  // register window2_3_7
  reg [7 : 0] window2_3_7;
  wire [7 : 0] window2_3_7$D_IN;
  wire window2_3_7$EN;

  // register window2_4_0
  reg [7 : 0] window2_4_0;
  wire [7 : 0] window2_4_0$D_IN;
  wire window2_4_0$EN;

  // register window2_4_1
  reg [7 : 0] window2_4_1;
  wire [7 : 0] window2_4_1$D_IN;
  wire window2_4_1$EN;

  // register window2_4_2
  reg [7 : 0] window2_4_2;
  wire [7 : 0] window2_4_2$D_IN;
  wire window2_4_2$EN;

  // register window2_4_3
  reg [7 : 0] window2_4_3;
  wire [7 : 0] window2_4_3$D_IN;
  wire window2_4_3$EN;

  // register window2_4_4
  reg [7 : 0] window2_4_4;
  wire [7 : 0] window2_4_4$D_IN;
  wire window2_4_4$EN;

  // register window2_4_5
  reg [7 : 0] window2_4_5;
  wire [7 : 0] window2_4_5$D_IN;
  wire window2_4_5$EN;

  // register window2_4_6
  reg [7 : 0] window2_4_6;
  wire [7 : 0] window2_4_6$D_IN;
  wire window2_4_6$EN;

  // register window2_4_7
  reg [7 : 0] window2_4_7;
  wire [7 : 0] window2_4_7$D_IN;
  wire window2_4_7$EN;

  // register window2_5_0
  reg [7 : 0] window2_5_0;
  wire [7 : 0] window2_5_0$D_IN;
  wire window2_5_0$EN;

  // register window2_5_1
  reg [7 : 0] window2_5_1;
  wire [7 : 0] window2_5_1$D_IN;
  wire window2_5_1$EN;

  // register window2_5_2
  reg [7 : 0] window2_5_2;
  wire [7 : 0] window2_5_2$D_IN;
  wire window2_5_2$EN;

  // register window2_5_3
  reg [7 : 0] window2_5_3;
  wire [7 : 0] window2_5_3$D_IN;
  wire window2_5_3$EN;

  // register window2_5_4
  reg [7 : 0] window2_5_4;
  wire [7 : 0] window2_5_4$D_IN;
  wire window2_5_4$EN;

  // register window2_5_5
  reg [7 : 0] window2_5_5;
  wire [7 : 0] window2_5_5$D_IN;
  wire window2_5_5$EN;

  // register window2_5_6
  reg [7 : 0] window2_5_6;
  wire [7 : 0] window2_5_6$D_IN;
  wire window2_5_6$EN;

  // register window2_5_7
  reg [7 : 0] window2_5_7;
  wire [7 : 0] window2_5_7$D_IN;
  wire window2_5_7$EN;

  // register window2_6_0
  reg [7 : 0] window2_6_0;
  wire [7 : 0] window2_6_0$D_IN;
  wire window2_6_0$EN;

  // register window2_6_1
  reg [7 : 0] window2_6_1;
  wire [7 : 0] window2_6_1$D_IN;
  wire window2_6_1$EN;

  // register window2_6_2
  reg [7 : 0] window2_6_2;
  wire [7 : 0] window2_6_2$D_IN;
  wire window2_6_2$EN;

  // register window2_6_3
  reg [7 : 0] window2_6_3;
  wire [7 : 0] window2_6_3$D_IN;
  wire window2_6_3$EN;

  // register window2_6_4
  reg [7 : 0] window2_6_4;
  wire [7 : 0] window2_6_4$D_IN;
  wire window2_6_4$EN;

  // register window2_6_5
  reg [7 : 0] window2_6_5;
  wire [7 : 0] window2_6_5$D_IN;
  wire window2_6_5$EN;

  // register window2_6_6
  reg [7 : 0] window2_6_6;
  wire [7 : 0] window2_6_6$D_IN;
  wire window2_6_6$EN;

  // register window2_6_7
  reg [7 : 0] window2_6_7;
  wire [7 : 0] window2_6_7$D_IN;
  wire window2_6_7$EN;

  // register window2_7_0
  reg [7 : 0] window2_7_0;
  wire [7 : 0] window2_7_0$D_IN;
  wire window2_7_0$EN;

  // register window2_7_1
  reg [7 : 0] window2_7_1;
  wire [7 : 0] window2_7_1$D_IN;
  wire window2_7_1$EN;

  // register window2_7_2
  reg [7 : 0] window2_7_2;
  wire [7 : 0] window2_7_2$D_IN;
  wire window2_7_2$EN;

  // register window2_7_3
  reg [7 : 0] window2_7_3;
  wire [7 : 0] window2_7_3$D_IN;
  wire window2_7_3$EN;

  // register window2_7_4
  reg [7 : 0] window2_7_4;
  wire [7 : 0] window2_7_4$D_IN;
  wire window2_7_4$EN;

  // register window2_7_5
  reg [7 : 0] window2_7_5;
  wire [7 : 0] window2_7_5$D_IN;
  wire window2_7_5$EN;

  // register window2_7_6
  reg [7 : 0] window2_7_6;
  wire [7 : 0] window2_7_6$D_IN;
  wire window2_7_6$EN;

  // register window2_7_7
  reg [7 : 0] window2_7_7;
  wire [7 : 0] window2_7_7$D_IN;
  wire window2_7_7$EN;

  // register window_0_0
  reg [7 : 0] window_0_0;
  wire [7 : 0] window_0_0$D_IN;
  wire window_0_0$EN;

  // register window_0_1
  reg [7 : 0] window_0_1;
  wire [7 : 0] window_0_1$D_IN;
  wire window_0_1$EN;

  // register window_0_2
  reg [7 : 0] window_0_2;
  wire [7 : 0] window_0_2$D_IN;
  wire window_0_2$EN;

  // register window_0_3
  reg [7 : 0] window_0_3;
  wire [7 : 0] window_0_3$D_IN;
  wire window_0_3$EN;

  // register window_0_4
  reg [7 : 0] window_0_4;
  wire [7 : 0] window_0_4$D_IN;
  wire window_0_4$EN;

  // register window_0_5
  reg [7 : 0] window_0_5;
  wire [7 : 0] window_0_5$D_IN;
  wire window_0_5$EN;

  // register window_0_6
  reg [7 : 0] window_0_6;
  wire [7 : 0] window_0_6$D_IN;
  wire window_0_6$EN;

  // register window_0_7
  reg [7 : 0] window_0_7;
  wire [7 : 0] window_0_7$D_IN;
  wire window_0_7$EN;

  // register window_1_0
  reg [7 : 0] window_1_0;
  wire [7 : 0] window_1_0$D_IN;
  wire window_1_0$EN;

  // register window_1_1
  reg [7 : 0] window_1_1;
  wire [7 : 0] window_1_1$D_IN;
  wire window_1_1$EN;

  // register window_1_2
  reg [7 : 0] window_1_2;
  wire [7 : 0] window_1_2$D_IN;
  wire window_1_2$EN;

  // register window_1_3
  reg [7 : 0] window_1_3;
  wire [7 : 0] window_1_3$D_IN;
  wire window_1_3$EN;

  // register window_1_4
  reg [7 : 0] window_1_4;
  wire [7 : 0] window_1_4$D_IN;
  wire window_1_4$EN;

  // register window_1_5
  reg [7 : 0] window_1_5;
  wire [7 : 0] window_1_5$D_IN;
  wire window_1_5$EN;

  // register window_1_6
  reg [7 : 0] window_1_6;
  wire [7 : 0] window_1_6$D_IN;
  wire window_1_6$EN;

  // register window_1_7
  reg [7 : 0] window_1_7;
  wire [7 : 0] window_1_7$D_IN;
  wire window_1_7$EN;

  // register window_2_0
  reg [7 : 0] window_2_0;
  wire [7 : 0] window_2_0$D_IN;
  wire window_2_0$EN;

  // register window_2_1
  reg [7 : 0] window_2_1;
  wire [7 : 0] window_2_1$D_IN;
  wire window_2_1$EN;

  // register window_2_2
  reg [7 : 0] window_2_2;
  wire [7 : 0] window_2_2$D_IN;
  wire window_2_2$EN;

  // register window_2_3
  reg [7 : 0] window_2_3;
  wire [7 : 0] window_2_3$D_IN;
  wire window_2_3$EN;

  // register window_2_4
  reg [7 : 0] window_2_4;
  wire [7 : 0] window_2_4$D_IN;
  wire window_2_4$EN;

  // register window_2_5
  reg [7 : 0] window_2_5;
  wire [7 : 0] window_2_5$D_IN;
  wire window_2_5$EN;

  // register window_2_6
  reg [7 : 0] window_2_6;
  wire [7 : 0] window_2_6$D_IN;
  wire window_2_6$EN;

  // register window_2_7
  reg [7 : 0] window_2_7;
  wire [7 : 0] window_2_7$D_IN;
  wire window_2_7$EN;

  // register window_3_0
  reg [7 : 0] window_3_0;
  wire [7 : 0] window_3_0$D_IN;
  wire window_3_0$EN;

  // register window_3_1
  reg [7 : 0] window_3_1;
  wire [7 : 0] window_3_1$D_IN;
  wire window_3_1$EN;

  // register window_3_2
  reg [7 : 0] window_3_2;
  wire [7 : 0] window_3_2$D_IN;
  wire window_3_2$EN;

  // register window_3_3
  reg [7 : 0] window_3_3;
  wire [7 : 0] window_3_3$D_IN;
  wire window_3_3$EN;

  // register window_3_4
  reg [7 : 0] window_3_4;
  wire [7 : 0] window_3_4$D_IN;
  wire window_3_4$EN;

  // register window_3_5
  reg [7 : 0] window_3_5;
  wire [7 : 0] window_3_5$D_IN;
  wire window_3_5$EN;

  // register window_3_6
  reg [7 : 0] window_3_6;
  wire [7 : 0] window_3_6$D_IN;
  wire window_3_6$EN;

  // register window_3_7
  reg [7 : 0] window_3_7;
  wire [7 : 0] window_3_7$D_IN;
  wire window_3_7$EN;

  // register window_4_0
  reg [7 : 0] window_4_0;
  wire [7 : 0] window_4_0$D_IN;
  wire window_4_0$EN;

  // register window_4_1
  reg [7 : 0] window_4_1;
  wire [7 : 0] window_4_1$D_IN;
  wire window_4_1$EN;

  // register window_4_2
  reg [7 : 0] window_4_2;
  wire [7 : 0] window_4_2$D_IN;
  wire window_4_2$EN;

  // register window_4_3
  reg [7 : 0] window_4_3;
  wire [7 : 0] window_4_3$D_IN;
  wire window_4_3$EN;

  // register window_4_4
  reg [7 : 0] window_4_4;
  wire [7 : 0] window_4_4$D_IN;
  wire window_4_4$EN;

  // register window_4_5
  reg [7 : 0] window_4_5;
  wire [7 : 0] window_4_5$D_IN;
  wire window_4_5$EN;

  // register window_4_6
  reg [7 : 0] window_4_6;
  wire [7 : 0] window_4_6$D_IN;
  wire window_4_6$EN;

  // register window_4_7
  reg [7 : 0] window_4_7;
  wire [7 : 0] window_4_7$D_IN;
  wire window_4_7$EN;

  // register window_5_0
  reg [7 : 0] window_5_0;
  wire [7 : 0] window_5_0$D_IN;
  wire window_5_0$EN;

  // register window_5_1
  reg [7 : 0] window_5_1;
  wire [7 : 0] window_5_1$D_IN;
  wire window_5_1$EN;

  // register window_5_2
  reg [7 : 0] window_5_2;
  wire [7 : 0] window_5_2$D_IN;
  wire window_5_2$EN;

  // register window_5_3
  reg [7 : 0] window_5_3;
  wire [7 : 0] window_5_3$D_IN;
  wire window_5_3$EN;

  // register window_5_4
  reg [7 : 0] window_5_4;
  wire [7 : 0] window_5_4$D_IN;
  wire window_5_4$EN;

  // register window_5_5
  reg [7 : 0] window_5_5;
  wire [7 : 0] window_5_5$D_IN;
  wire window_5_5$EN;

  // register window_5_6
  reg [7 : 0] window_5_6;
  wire [7 : 0] window_5_6$D_IN;
  wire window_5_6$EN;

  // register window_5_7
  reg [7 : 0] window_5_7;
  wire [7 : 0] window_5_7$D_IN;
  wire window_5_7$EN;

  // register window_6_0
  reg [7 : 0] window_6_0;
  wire [7 : 0] window_6_0$D_IN;
  wire window_6_0$EN;

  // register window_6_1
  reg [7 : 0] window_6_1;
  wire [7 : 0] window_6_1$D_IN;
  wire window_6_1$EN;

  // register window_6_2
  reg [7 : 0] window_6_2;
  wire [7 : 0] window_6_2$D_IN;
  wire window_6_2$EN;

  // register window_6_3
  reg [7 : 0] window_6_3;
  wire [7 : 0] window_6_3$D_IN;
  wire window_6_3$EN;

  // register window_6_4
  reg [7 : 0] window_6_4;
  wire [7 : 0] window_6_4$D_IN;
  wire window_6_4$EN;

  // register window_6_5
  reg [7 : 0] window_6_5;
  wire [7 : 0] window_6_5$D_IN;
  wire window_6_5$EN;

  // register window_6_6
  reg [7 : 0] window_6_6;
  wire [7 : 0] window_6_6$D_IN;
  wire window_6_6$EN;

  // register window_6_7
  reg [7 : 0] window_6_7;
  wire [7 : 0] window_6_7$D_IN;
  wire window_6_7$EN;

  // register window_7_0
  reg [7 : 0] window_7_0;
  wire [7 : 0] window_7_0$D_IN;
  wire window_7_0$EN;

  // register window_7_1
  reg [7 : 0] window_7_1;
  wire [7 : 0] window_7_1$D_IN;
  wire window_7_1$EN;

  // register window_7_2
  reg [7 : 0] window_7_2;
  wire [7 : 0] window_7_2$D_IN;
  wire window_7_2$EN;

  // register window_7_3
  reg [7 : 0] window_7_3;
  wire [7 : 0] window_7_3$D_IN;
  wire window_7_3$EN;

  // register window_7_4
  reg [7 : 0] window_7_4;
  wire [7 : 0] window_7_4$D_IN;
  wire window_7_4$EN;

  // register window_7_5
  reg [7 : 0] window_7_5;
  wire [7 : 0] window_7_5$D_IN;
  wire window_7_5$EN;

  // register window_7_6
  reg [7 : 0] window_7_6;
  wire [7 : 0] window_7_6$D_IN;
  wire window_7_6$EN;

  // register window_7_7
  reg [7 : 0] window_7_7;
  wire [7 : 0] window_7_7$D_IN;
  wire window_7_7$EN;

  // ports of submodule inQ
  wire [63 : 0] inQ$D_IN, inQ$D_OUT;
  wire inQ$CLR, inQ$DEQ, inQ$EMPTY_N, inQ$ENQ, inQ$FULL_N;

  // remaining internal signals
  wire [63 : 0] y__h10704,
		y__h10999,
		y__h11099,
		y__h11199,
		y__h11299,
		y__h11399,
		y__h11499,
		y__h11599;

  // action method put
  assign RDY_put = inQ$FULL_N ;

  // action method configure
  assign RDY_configure = 1'd1 ;

  // actionvalue method get
  assign get =
	     { window_7_7,
	       window_7_6,
	       window_7_5,
	       window_7_4,
	       window_7_3,
	       window_7_2,
	       window_7_1,
	       window_7_0,
	       window_6_7,
	       window_6_6,
	       window_6_5,
	       window_6_4,
	       window_6_3,
	       window_6_2,
	       window_6_1,
	       window_6_0,
	       window_5_7,
	       window_5_6,
	       window_5_5,
	       window_5_4,
	       window_5_3,
	       window_5_2,
	       window_5_1,
	       window_5_0,
	       window_4_7,
	       window_4_6,
	       window_4_5,
	       window_4_4,
	       window_4_3,
	       window_4_2,
	       window_4_1,
	       window_4_0,
	       window_3_7,
	       window_3_6,
	       window_3_5,
	       window_3_4,
	       window_3_3,
	       window_3_2,
	       window_3_1,
	       window_3_0,
	       window_2_7,
	       window_2_6,
	       window_2_5,
	       window_2_4,
	       window_2_3,
	       window_2_2,
	       window_2_1,
	       window_2_0,
	       window_1_7,
	       window_1_6,
	       window_1_5,
	       window_1_4,
	       window_1_3,
	       window_1_2,
	       window_1_1,
	       window_1_0,
	       window_0_7,
	       window_0_6,
	       window_0_5,
	       window_0_4,
	       window_0_3,
	       window_0_2,
	       window_0_1,
	       window_0_0 } ;
  assign RDY_get = p2_rv[1] ;

  // submodule inQ
  FIFO2 #(.width(32'd64), .guarded(1'd1)) inQ(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(inQ$D_IN),
					      .ENQ(inQ$ENQ),
					      .DEQ(inQ$DEQ),
					      .CLR(inQ$CLR),
					      .D_OUT(inQ$D_OUT),
					      .FULL_N(inQ$FULL_N),
					      .EMPTY_N(inQ$EMPTY_N));

  // inlined wires
  assign p0_rv$EN_port0__write = p0_rv[1] && !p1_rv$port1__read[1] ;
  assign p0_rv$port1__read = p0_rv$EN_port0__write ? 2'd0 : p0_rv ;
  assign p0_rv$EN_port1__write = inQ$EMPTY_N && !p0_rv$port1__read[1] ;
  assign p0_rv$port2__read =
	     p0_rv$EN_port1__write ? 2'd3 : p0_rv$port1__read ;
  assign p1_rv$EN_port0__write = p1_rv[1] && !p2_rv$port1__read[1] ;
  assign p1_rv$port1__read = p1_rv$EN_port0__write ? 2'd0 : p1_rv ;
  assign p1_rv$EN_port1__write =
	     p0_rv[1] && !p1_rv$port1__read[1] && count >= kernel - 4'd1 ;
  assign p1_rv$port2__read =
	     p1_rv$EN_port1__write ? 2'd3 : p1_rv$port1__read ;
  assign p2_rv$port1__read = EN_get ? 2'd0 : p2_rv ;
  assign p2_rv$EN_port1__write = p1_rv[1] && !p2_rv$port1__read[1] ;
  assign p2_rv$port2__read =
	     p2_rv$EN_port1__write ? 2'd3 : p2_rv$port1__read ;

  // register _unnamed_
  assign _unnamed_$D_IN = { 56'd0, inQ$D_OUT[7:0] } ;
  assign _unnamed_$EN = inQ$EMPTY_N && !p0_rv$port1__read[1] ;

  // register _unnamed__0_1
  assign _unnamed__0_1$D_IN = _unnamed_ | y__h10704 ;
  assign _unnamed__0_1$EN = 1'd1 ;

  // register _unnamed__1
  assign _unnamed__1$D_IN = { 56'd0, inQ$D_OUT[15:8] } ;
  assign _unnamed__1$EN = inQ$EMPTY_N && !p0_rv$port1__read[1] ;

  // register _unnamed__1_1
  assign _unnamed__1_1$D_IN = _unnamed__1 | y__h10999 ;
  assign _unnamed__1_1$EN = 1'd1 ;

  // register _unnamed__2
  assign _unnamed__2$D_IN = { 56'd0, inQ$D_OUT[23:16] } ;
  assign _unnamed__2$EN = inQ$EMPTY_N && !p0_rv$port1__read[1] ;

  // register _unnamed__2_1
  assign _unnamed__2_1$D_IN = _unnamed__2 | y__h11099 ;
  assign _unnamed__2_1$EN = 1'd1 ;

  // register _unnamed__3
  assign _unnamed__3$D_IN = { 56'd0, inQ$D_OUT[31:24] } ;
  assign _unnamed__3$EN = inQ$EMPTY_N && !p0_rv$port1__read[1] ;

  // register _unnamed__3_1
  assign _unnamed__3_1$D_IN = _unnamed__3 | y__h11199 ;
  assign _unnamed__3_1$EN = 1'd1 ;

  // register _unnamed__4
  assign _unnamed__4$D_IN = { 56'd0, inQ$D_OUT[39:32] } ;
  assign _unnamed__4$EN = inQ$EMPTY_N && !p0_rv$port1__read[1] ;

  // register _unnamed__4_1
  assign _unnamed__4_1$D_IN = _unnamed__4 | y__h11299 ;
  assign _unnamed__4_1$EN = 1'd1 ;

  // register _unnamed__5
  assign _unnamed__5$D_IN = { 56'd0, inQ$D_OUT[47:40] } ;
  assign _unnamed__5$EN = inQ$EMPTY_N && !p0_rv$port1__read[1] ;

  // register _unnamed__5_1
  assign _unnamed__5_1$D_IN = _unnamed__5 | y__h11399 ;
  assign _unnamed__5_1$EN = 1'd1 ;

  // register _unnamed__6
  assign _unnamed__6$D_IN = { 56'd0, inQ$D_OUT[55:48] } ;
  assign _unnamed__6$EN = inQ$EMPTY_N && !p0_rv$port1__read[1] ;

  // register _unnamed__6_1
  assign _unnamed__6_1$D_IN = _unnamed__6 | y__h11499 ;
  assign _unnamed__6_1$EN = 1'd1 ;

  // register _unnamed__7
  assign _unnamed__7$D_IN = { 56'd0, inQ$D_OUT[63:56] } ;
  assign _unnamed__7$EN = inQ$EMPTY_N && !p0_rv$port1__read[1] ;

  // register _unnamed__7_1
  assign _unnamed__7_1$D_IN = _unnamed__7 | y__h11599 ;
  assign _unnamed__7_1$EN = 1'd1 ;

  // register count
  assign count$D_IN = count + 4'd1 ;
  assign count$EN = p0_rv[1] && !p1_rv$port1__read[1] ;

  // register kernel
  assign kernel$D_IN = configure_ker ;
  assign kernel$EN = EN_configure ;

  // register p0_rv
  assign p0_rv$D_IN = p0_rv$port2__read ;
  assign p0_rv$EN = 1'b1 ;

  // register p1_rv
  assign p1_rv$D_IN = p1_rv$port2__read ;
  assign p1_rv$EN = 1'b1 ;

  // register p2_rv
  assign p2_rv$D_IN = p2_rv$port2__read ;
  assign p2_rv$EN = 1'b1 ;

  // register p3_rv
  assign p3_rv$D_IN = p3_rv ;
  assign p3_rv$EN = 1'b1 ;

  // register shift_amount
  assign shift_amount$D_IN = configure_shift ;
  assign shift_amount$EN = EN_configure ;

  // register window2_0_0
  assign window2_0_0$D_IN = 8'h0 ;
  assign window2_0_0$EN = 1'b0 ;

  // register window2_0_1
  assign window2_0_1$D_IN = 8'h0 ;
  assign window2_0_1$EN = 1'b0 ;

  // register window2_0_2
  assign window2_0_2$D_IN = 8'h0 ;
  assign window2_0_2$EN = 1'b0 ;

  // register window2_0_3
  assign window2_0_3$D_IN = 8'h0 ;
  assign window2_0_3$EN = 1'b0 ;

  // register window2_0_4
  assign window2_0_4$D_IN = 8'h0 ;
  assign window2_0_4$EN = 1'b0 ;

  // register window2_0_5
  assign window2_0_5$D_IN = 8'h0 ;
  assign window2_0_5$EN = 1'b0 ;

  // register window2_0_6
  assign window2_0_6$D_IN = 8'h0 ;
  assign window2_0_6$EN = 1'b0 ;

  // register window2_0_7
  assign window2_0_7$D_IN = 8'h0 ;
  assign window2_0_7$EN = 1'b0 ;

  // register window2_1_0
  assign window2_1_0$D_IN = 8'h0 ;
  assign window2_1_0$EN = 1'b0 ;

  // register window2_1_1
  assign window2_1_1$D_IN = 8'h0 ;
  assign window2_1_1$EN = 1'b0 ;

  // register window2_1_2
  assign window2_1_2$D_IN = 8'h0 ;
  assign window2_1_2$EN = 1'b0 ;

  // register window2_1_3
  assign window2_1_3$D_IN = 8'h0 ;
  assign window2_1_3$EN = 1'b0 ;

  // register window2_1_4
  assign window2_1_4$D_IN = 8'h0 ;
  assign window2_1_4$EN = 1'b0 ;

  // register window2_1_5
  assign window2_1_5$D_IN = 8'h0 ;
  assign window2_1_5$EN = 1'b0 ;

  // register window2_1_6
  assign window2_1_6$D_IN = 8'h0 ;
  assign window2_1_6$EN = 1'b0 ;

  // register window2_1_7
  assign window2_1_7$D_IN = 8'h0 ;
  assign window2_1_7$EN = 1'b0 ;

  // register window2_2_0
  assign window2_2_0$D_IN = 8'h0 ;
  assign window2_2_0$EN = 1'b0 ;

  // register window2_2_1
  assign window2_2_1$D_IN = 8'h0 ;
  assign window2_2_1$EN = 1'b0 ;

  // register window2_2_2
  assign window2_2_2$D_IN = 8'h0 ;
  assign window2_2_2$EN = 1'b0 ;

  // register window2_2_3
  assign window2_2_3$D_IN = 8'h0 ;
  assign window2_2_3$EN = 1'b0 ;

  // register window2_2_4
  assign window2_2_4$D_IN = 8'h0 ;
  assign window2_2_4$EN = 1'b0 ;

  // register window2_2_5
  assign window2_2_5$D_IN = 8'h0 ;
  assign window2_2_5$EN = 1'b0 ;

  // register window2_2_6
  assign window2_2_6$D_IN = 8'h0 ;
  assign window2_2_6$EN = 1'b0 ;

  // register window2_2_7
  assign window2_2_7$D_IN = 8'h0 ;
  assign window2_2_7$EN = 1'b0 ;

  // register window2_3_0
  assign window2_3_0$D_IN = 8'h0 ;
  assign window2_3_0$EN = 1'b0 ;

  // register window2_3_1
  assign window2_3_1$D_IN = 8'h0 ;
  assign window2_3_1$EN = 1'b0 ;

  // register window2_3_2
  assign window2_3_2$D_IN = 8'h0 ;
  assign window2_3_2$EN = 1'b0 ;

  // register window2_3_3
  assign window2_3_3$D_IN = 8'h0 ;
  assign window2_3_3$EN = 1'b0 ;

  // register window2_3_4
  assign window2_3_4$D_IN = 8'h0 ;
  assign window2_3_4$EN = 1'b0 ;

  // register window2_3_5
  assign window2_3_5$D_IN = 8'h0 ;
  assign window2_3_5$EN = 1'b0 ;

  // register window2_3_6
  assign window2_3_6$D_IN = 8'h0 ;
  assign window2_3_6$EN = 1'b0 ;

  // register window2_3_7
  assign window2_3_7$D_IN = 8'h0 ;
  assign window2_3_7$EN = 1'b0 ;

  // register window2_4_0
  assign window2_4_0$D_IN = 8'h0 ;
  assign window2_4_0$EN = 1'b0 ;

  // register window2_4_1
  assign window2_4_1$D_IN = 8'h0 ;
  assign window2_4_1$EN = 1'b0 ;

  // register window2_4_2
  assign window2_4_2$D_IN = 8'h0 ;
  assign window2_4_2$EN = 1'b0 ;

  // register window2_4_3
  assign window2_4_3$D_IN = 8'h0 ;
  assign window2_4_3$EN = 1'b0 ;

  // register window2_4_4
  assign window2_4_4$D_IN = 8'h0 ;
  assign window2_4_4$EN = 1'b0 ;

  // register window2_4_5
  assign window2_4_5$D_IN = 8'h0 ;
  assign window2_4_5$EN = 1'b0 ;

  // register window2_4_6
  assign window2_4_6$D_IN = 8'h0 ;
  assign window2_4_6$EN = 1'b0 ;

  // register window2_4_7
  assign window2_4_7$D_IN = 8'h0 ;
  assign window2_4_7$EN = 1'b0 ;

  // register window2_5_0
  assign window2_5_0$D_IN = 8'h0 ;
  assign window2_5_0$EN = 1'b0 ;

  // register window2_5_1
  assign window2_5_1$D_IN = 8'h0 ;
  assign window2_5_1$EN = 1'b0 ;

  // register window2_5_2
  assign window2_5_2$D_IN = 8'h0 ;
  assign window2_5_2$EN = 1'b0 ;

  // register window2_5_3
  assign window2_5_3$D_IN = 8'h0 ;
  assign window2_5_3$EN = 1'b0 ;

  // register window2_5_4
  assign window2_5_4$D_IN = 8'h0 ;
  assign window2_5_4$EN = 1'b0 ;

  // register window2_5_5
  assign window2_5_5$D_IN = 8'h0 ;
  assign window2_5_5$EN = 1'b0 ;

  // register window2_5_6
  assign window2_5_6$D_IN = 8'h0 ;
  assign window2_5_6$EN = 1'b0 ;

  // register window2_5_7
  assign window2_5_7$D_IN = 8'h0 ;
  assign window2_5_7$EN = 1'b0 ;

  // register window2_6_0
  assign window2_6_0$D_IN = 8'h0 ;
  assign window2_6_0$EN = 1'b0 ;

  // register window2_6_1
  assign window2_6_1$D_IN = 8'h0 ;
  assign window2_6_1$EN = 1'b0 ;

  // register window2_6_2
  assign window2_6_2$D_IN = 8'h0 ;
  assign window2_6_2$EN = 1'b0 ;

  // register window2_6_3
  assign window2_6_3$D_IN = 8'h0 ;
  assign window2_6_3$EN = 1'b0 ;

  // register window2_6_4
  assign window2_6_4$D_IN = 8'h0 ;
  assign window2_6_4$EN = 1'b0 ;

  // register window2_6_5
  assign window2_6_5$D_IN = 8'h0 ;
  assign window2_6_5$EN = 1'b0 ;

  // register window2_6_6
  assign window2_6_6$D_IN = 8'h0 ;
  assign window2_6_6$EN = 1'b0 ;

  // register window2_6_7
  assign window2_6_7$D_IN = 8'h0 ;
  assign window2_6_7$EN = 1'b0 ;

  // register window2_7_0
  assign window2_7_0$D_IN = 8'h0 ;
  assign window2_7_0$EN = 1'b0 ;

  // register window2_7_1
  assign window2_7_1$D_IN = 8'h0 ;
  assign window2_7_1$EN = 1'b0 ;

  // register window2_7_2
  assign window2_7_2$D_IN = 8'h0 ;
  assign window2_7_2$EN = 1'b0 ;

  // register window2_7_3
  assign window2_7_3$D_IN = 8'h0 ;
  assign window2_7_3$EN = 1'b0 ;

  // register window2_7_4
  assign window2_7_4$D_IN = 8'h0 ;
  assign window2_7_4$EN = 1'b0 ;

  // register window2_7_5
  assign window2_7_5$D_IN = 8'h0 ;
  assign window2_7_5$EN = 1'b0 ;

  // register window2_7_6
  assign window2_7_6$D_IN = 8'h0 ;
  assign window2_7_6$EN = 1'b0 ;

  // register window2_7_7
  assign window2_7_7$D_IN = 8'h0 ;
  assign window2_7_7$EN = 1'b0 ;

  // register window_0_0
  assign window_0_0$D_IN = _unnamed__0_1[7:0] ;
  assign window_0_0$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_0_1
  assign window_0_1$D_IN = _unnamed__1_1[7:0] ;
  assign window_0_1$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_0_2
  assign window_0_2$D_IN = _unnamed__2_1[7:0] ;
  assign window_0_2$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_0_3
  assign window_0_3$D_IN = _unnamed__3_1[7:0] ;
  assign window_0_3$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_0_4
  assign window_0_4$D_IN = _unnamed__4_1[7:0] ;
  assign window_0_4$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_0_5
  assign window_0_5$D_IN = _unnamed__5_1[7:0] ;
  assign window_0_5$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_0_6
  assign window_0_6$D_IN = _unnamed__6_1[7:0] ;
  assign window_0_6$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_0_7
  assign window_0_7$D_IN = _unnamed__7_1[7:0] ;
  assign window_0_7$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_1_0
  assign window_1_0$D_IN = _unnamed__0_1[15:8] ;
  assign window_1_0$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_1_1
  assign window_1_1$D_IN = _unnamed__1_1[15:8] ;
  assign window_1_1$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_1_2
  assign window_1_2$D_IN = _unnamed__2_1[15:8] ;
  assign window_1_2$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_1_3
  assign window_1_3$D_IN = _unnamed__3_1[15:8] ;
  assign window_1_3$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_1_4
  assign window_1_4$D_IN = _unnamed__4_1[15:8] ;
  assign window_1_4$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_1_5
  assign window_1_5$D_IN = _unnamed__5_1[15:8] ;
  assign window_1_5$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_1_6
  assign window_1_6$D_IN = _unnamed__6_1[15:8] ;
  assign window_1_6$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_1_7
  assign window_1_7$D_IN = _unnamed__7_1[15:8] ;
  assign window_1_7$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_2_0
  assign window_2_0$D_IN = _unnamed__0_1[23:16] ;
  assign window_2_0$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_2_1
  assign window_2_1$D_IN = _unnamed__1_1[23:16] ;
  assign window_2_1$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_2_2
  assign window_2_2$D_IN = _unnamed__2_1[23:16] ;
  assign window_2_2$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_2_3
  assign window_2_3$D_IN = _unnamed__3_1[23:16] ;
  assign window_2_3$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_2_4
  assign window_2_4$D_IN = _unnamed__4_1[23:16] ;
  assign window_2_4$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_2_5
  assign window_2_5$D_IN = _unnamed__5_1[23:16] ;
  assign window_2_5$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_2_6
  assign window_2_6$D_IN = _unnamed__6_1[23:16] ;
  assign window_2_6$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_2_7
  assign window_2_7$D_IN = _unnamed__7_1[23:16] ;
  assign window_2_7$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_3_0
  assign window_3_0$D_IN = _unnamed__0_1[31:24] ;
  assign window_3_0$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_3_1
  assign window_3_1$D_IN = _unnamed__1_1[31:24] ;
  assign window_3_1$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_3_2
  assign window_3_2$D_IN = _unnamed__2_1[31:24] ;
  assign window_3_2$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_3_3
  assign window_3_3$D_IN = _unnamed__3_1[31:24] ;
  assign window_3_3$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_3_4
  assign window_3_4$D_IN = _unnamed__4_1[31:24] ;
  assign window_3_4$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_3_5
  assign window_3_5$D_IN = _unnamed__5_1[31:24] ;
  assign window_3_5$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_3_6
  assign window_3_6$D_IN = _unnamed__6_1[31:24] ;
  assign window_3_6$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_3_7
  assign window_3_7$D_IN = _unnamed__7_1[31:24] ;
  assign window_3_7$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_4_0
  assign window_4_0$D_IN = _unnamed__0_1[39:32] ;
  assign window_4_0$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_4_1
  assign window_4_1$D_IN = _unnamed__1_1[39:32] ;
  assign window_4_1$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_4_2
  assign window_4_2$D_IN = _unnamed__2_1[39:32] ;
  assign window_4_2$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_4_3
  assign window_4_3$D_IN = _unnamed__3_1[39:32] ;
  assign window_4_3$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_4_4
  assign window_4_4$D_IN = _unnamed__4_1[39:32] ;
  assign window_4_4$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_4_5
  assign window_4_5$D_IN = _unnamed__5_1[39:32] ;
  assign window_4_5$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_4_6
  assign window_4_6$D_IN = _unnamed__6_1[39:32] ;
  assign window_4_6$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_4_7
  assign window_4_7$D_IN = _unnamed__7_1[39:32] ;
  assign window_4_7$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_5_0
  assign window_5_0$D_IN = _unnamed__0_1[47:40] ;
  assign window_5_0$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_5_1
  assign window_5_1$D_IN = _unnamed__1_1[47:40] ;
  assign window_5_1$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_5_2
  assign window_5_2$D_IN = _unnamed__2_1[47:40] ;
  assign window_5_2$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_5_3
  assign window_5_3$D_IN = _unnamed__3_1[47:40] ;
  assign window_5_3$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_5_4
  assign window_5_4$D_IN = _unnamed__4_1[47:40] ;
  assign window_5_4$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_5_5
  assign window_5_5$D_IN = _unnamed__5_1[47:40] ;
  assign window_5_5$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_5_6
  assign window_5_6$D_IN = _unnamed__6_1[47:40] ;
  assign window_5_6$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_5_7
  assign window_5_7$D_IN = _unnamed__7_1[47:40] ;
  assign window_5_7$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_6_0
  assign window_6_0$D_IN = _unnamed__0_1[55:48] ;
  assign window_6_0$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_6_1
  assign window_6_1$D_IN = _unnamed__1_1[55:48] ;
  assign window_6_1$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_6_2
  assign window_6_2$D_IN = _unnamed__2_1[55:48] ;
  assign window_6_2$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_6_3
  assign window_6_3$D_IN = _unnamed__3_1[55:48] ;
  assign window_6_3$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_6_4
  assign window_6_4$D_IN = _unnamed__4_1[55:48] ;
  assign window_6_4$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_6_5
  assign window_6_5$D_IN = _unnamed__5_1[55:48] ;
  assign window_6_5$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_6_6
  assign window_6_6$D_IN = _unnamed__6_1[55:48] ;
  assign window_6_6$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_6_7
  assign window_6_7$D_IN = _unnamed__7_1[55:48] ;
  assign window_6_7$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_7_0
  assign window_7_0$D_IN = _unnamed__0_1[63:56] ;
  assign window_7_0$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_7_1
  assign window_7_1$D_IN = _unnamed__1_1[63:56] ;
  assign window_7_1$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_7_2
  assign window_7_2$D_IN = _unnamed__2_1[63:56] ;
  assign window_7_2$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_7_3
  assign window_7_3$D_IN = _unnamed__3_1[63:56] ;
  assign window_7_3$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_7_4
  assign window_7_4$D_IN = _unnamed__4_1[63:56] ;
  assign window_7_4$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_7_5
  assign window_7_5$D_IN = _unnamed__5_1[63:56] ;
  assign window_7_5$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_7_6
  assign window_7_6$D_IN = _unnamed__6_1[63:56] ;
  assign window_7_6$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // register window_7_7
  assign window_7_7$D_IN = _unnamed__7_1[63:56] ;
  assign window_7_7$EN = p1_rv[1] && !p2_rv$port1__read[1] ;

  // submodule inQ
  assign inQ$D_IN = put_datas ;
  assign inQ$ENQ = EN_put ;
  assign inQ$DEQ = inQ$EMPTY_N && !p0_rv$port1__read[1] ;
  assign inQ$CLR = 1'b0 ;

  // remaining internal signals
  assign y__h10704 = { _unnamed__0_1[55:0], 8'd0 } ;
  assign y__h10999 = { _unnamed__1_1[55:0], 8'd0 } ;
  assign y__h11099 = { _unnamed__2_1[55:0], 8'd0 } ;
  assign y__h11199 = { _unnamed__3_1[55:0], 8'd0 } ;
  assign y__h11299 = { _unnamed__4_1[55:0], 8'd0 } ;
  assign y__h11399 = { _unnamed__5_1[55:0], 8'd0 } ;
  assign y__h11499 = { _unnamed__6_1[55:0], 8'd0 } ;
  assign y__h11599 = { _unnamed__7_1[55:0], 8'd0 } ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        _unnamed_ <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__0_1 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__1 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__1_1 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__2 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__2_1 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__3 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__3_1 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__4 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__4_1 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__5 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__5_1 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__6 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__6_1 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__7 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	_unnamed__7_1 <= `BSV_ASSIGNMENT_DELAY 64'd0;
	count <= `BSV_ASSIGNMENT_DELAY 4'd0;
	kernel <= `BSV_ASSIGNMENT_DELAY 4'd0;
	p0_rv <= `BSV_ASSIGNMENT_DELAY 2'd0;
	p1_rv <= `BSV_ASSIGNMENT_DELAY 2'd0;
	p2_rv <= `BSV_ASSIGNMENT_DELAY 2'd0;
	p3_rv <= `BSV_ASSIGNMENT_DELAY 2'd0;
	shift_amount <= `BSV_ASSIGNMENT_DELAY 10'd0;
	window2_0_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_0_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_0_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_0_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_0_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_0_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_0_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_0_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_1_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_1_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_1_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_1_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_1_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_1_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_1_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_1_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_2_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_2_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_2_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_2_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_2_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_2_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_2_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_2_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_3_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_3_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_3_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_3_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_3_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_3_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_3_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_3_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_4_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_4_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_4_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_4_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_4_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_4_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_4_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_4_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_5_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_5_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_5_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_5_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_5_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_5_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_5_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_5_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_6_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_6_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_6_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_6_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_6_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_6_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_6_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_6_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_7_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_7_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_7_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_7_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_7_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_7_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_7_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window2_7_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_0_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_0_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_0_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_0_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_0_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_0_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_0_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_0_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_1_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_1_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_1_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_1_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_1_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_1_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_1_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_1_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_2_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_2_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_2_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_2_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_2_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_2_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_2_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_2_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_3_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_3_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_3_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_3_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_3_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_3_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_3_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_3_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_4_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_4_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_4_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_4_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_4_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_4_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_4_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_4_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_5_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_5_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_5_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_5_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_5_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_5_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_5_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_5_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_6_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_6_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_6_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_6_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_6_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_6_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_6_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_6_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_7_0 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_7_1 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_7_2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_7_3 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_7_4 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_7_5 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_7_6 <= `BSV_ASSIGNMENT_DELAY 8'd0;
	window_7_7 <= `BSV_ASSIGNMENT_DELAY 8'd0;
      end
    else
      begin
        if (_unnamed_$EN) _unnamed_ <= `BSV_ASSIGNMENT_DELAY _unnamed_$D_IN;
	if (_unnamed__0_1$EN)
	  _unnamed__0_1 <= `BSV_ASSIGNMENT_DELAY _unnamed__0_1$D_IN;
	if (_unnamed__1$EN)
	  _unnamed__1 <= `BSV_ASSIGNMENT_DELAY _unnamed__1$D_IN;
	if (_unnamed__1_1$EN)
	  _unnamed__1_1 <= `BSV_ASSIGNMENT_DELAY _unnamed__1_1$D_IN;
	if (_unnamed__2$EN)
	  _unnamed__2 <= `BSV_ASSIGNMENT_DELAY _unnamed__2$D_IN;
	if (_unnamed__2_1$EN)
	  _unnamed__2_1 <= `BSV_ASSIGNMENT_DELAY _unnamed__2_1$D_IN;
	if (_unnamed__3$EN)
	  _unnamed__3 <= `BSV_ASSIGNMENT_DELAY _unnamed__3$D_IN;
	if (_unnamed__3_1$EN)
	  _unnamed__3_1 <= `BSV_ASSIGNMENT_DELAY _unnamed__3_1$D_IN;
	if (_unnamed__4$EN)
	  _unnamed__4 <= `BSV_ASSIGNMENT_DELAY _unnamed__4$D_IN;
	if (_unnamed__4_1$EN)
	  _unnamed__4_1 <= `BSV_ASSIGNMENT_DELAY _unnamed__4_1$D_IN;
	if (_unnamed__5$EN)
	  _unnamed__5 <= `BSV_ASSIGNMENT_DELAY _unnamed__5$D_IN;
	if (_unnamed__5_1$EN)
	  _unnamed__5_1 <= `BSV_ASSIGNMENT_DELAY _unnamed__5_1$D_IN;
	if (_unnamed__6$EN)
	  _unnamed__6 <= `BSV_ASSIGNMENT_DELAY _unnamed__6$D_IN;
	if (_unnamed__6_1$EN)
	  _unnamed__6_1 <= `BSV_ASSIGNMENT_DELAY _unnamed__6_1$D_IN;
	if (_unnamed__7$EN)
	  _unnamed__7 <= `BSV_ASSIGNMENT_DELAY _unnamed__7$D_IN;
	if (_unnamed__7_1$EN)
	  _unnamed__7_1 <= `BSV_ASSIGNMENT_DELAY _unnamed__7_1$D_IN;
	if (count$EN) count <= `BSV_ASSIGNMENT_DELAY count$D_IN;
	if (kernel$EN) kernel <= `BSV_ASSIGNMENT_DELAY kernel$D_IN;
	if (p0_rv$EN) p0_rv <= `BSV_ASSIGNMENT_DELAY p0_rv$D_IN;
	if (p1_rv$EN) p1_rv <= `BSV_ASSIGNMENT_DELAY p1_rv$D_IN;
	if (p2_rv$EN) p2_rv <= `BSV_ASSIGNMENT_DELAY p2_rv$D_IN;
	if (p3_rv$EN) p3_rv <= `BSV_ASSIGNMENT_DELAY p3_rv$D_IN;
	if (shift_amount$EN)
	  shift_amount <= `BSV_ASSIGNMENT_DELAY shift_amount$D_IN;
	if (window2_0_0$EN)
	  window2_0_0 <= `BSV_ASSIGNMENT_DELAY window2_0_0$D_IN;
	if (window2_0_1$EN)
	  window2_0_1 <= `BSV_ASSIGNMENT_DELAY window2_0_1$D_IN;
	if (window2_0_2$EN)
	  window2_0_2 <= `BSV_ASSIGNMENT_DELAY window2_0_2$D_IN;
	if (window2_0_3$EN)
	  window2_0_3 <= `BSV_ASSIGNMENT_DELAY window2_0_3$D_IN;
	if (window2_0_4$EN)
	  window2_0_4 <= `BSV_ASSIGNMENT_DELAY window2_0_4$D_IN;
	if (window2_0_5$EN)
	  window2_0_5 <= `BSV_ASSIGNMENT_DELAY window2_0_5$D_IN;
	if (window2_0_6$EN)
	  window2_0_6 <= `BSV_ASSIGNMENT_DELAY window2_0_6$D_IN;
	if (window2_0_7$EN)
	  window2_0_7 <= `BSV_ASSIGNMENT_DELAY window2_0_7$D_IN;
	if (window2_1_0$EN)
	  window2_1_0 <= `BSV_ASSIGNMENT_DELAY window2_1_0$D_IN;
	if (window2_1_1$EN)
	  window2_1_1 <= `BSV_ASSIGNMENT_DELAY window2_1_1$D_IN;
	if (window2_1_2$EN)
	  window2_1_2 <= `BSV_ASSIGNMENT_DELAY window2_1_2$D_IN;
	if (window2_1_3$EN)
	  window2_1_3 <= `BSV_ASSIGNMENT_DELAY window2_1_3$D_IN;
	if (window2_1_4$EN)
	  window2_1_4 <= `BSV_ASSIGNMENT_DELAY window2_1_4$D_IN;
	if (window2_1_5$EN)
	  window2_1_5 <= `BSV_ASSIGNMENT_DELAY window2_1_5$D_IN;
	if (window2_1_6$EN)
	  window2_1_6 <= `BSV_ASSIGNMENT_DELAY window2_1_6$D_IN;
	if (window2_1_7$EN)
	  window2_1_7 <= `BSV_ASSIGNMENT_DELAY window2_1_7$D_IN;
	if (window2_2_0$EN)
	  window2_2_0 <= `BSV_ASSIGNMENT_DELAY window2_2_0$D_IN;
	if (window2_2_1$EN)
	  window2_2_1 <= `BSV_ASSIGNMENT_DELAY window2_2_1$D_IN;
	if (window2_2_2$EN)
	  window2_2_2 <= `BSV_ASSIGNMENT_DELAY window2_2_2$D_IN;
	if (window2_2_3$EN)
	  window2_2_3 <= `BSV_ASSIGNMENT_DELAY window2_2_3$D_IN;
	if (window2_2_4$EN)
	  window2_2_4 <= `BSV_ASSIGNMENT_DELAY window2_2_4$D_IN;
	if (window2_2_5$EN)
	  window2_2_5 <= `BSV_ASSIGNMENT_DELAY window2_2_5$D_IN;
	if (window2_2_6$EN)
	  window2_2_6 <= `BSV_ASSIGNMENT_DELAY window2_2_6$D_IN;
	if (window2_2_7$EN)
	  window2_2_7 <= `BSV_ASSIGNMENT_DELAY window2_2_7$D_IN;
	if (window2_3_0$EN)
	  window2_3_0 <= `BSV_ASSIGNMENT_DELAY window2_3_0$D_IN;
	if (window2_3_1$EN)
	  window2_3_1 <= `BSV_ASSIGNMENT_DELAY window2_3_1$D_IN;
	if (window2_3_2$EN)
	  window2_3_2 <= `BSV_ASSIGNMENT_DELAY window2_3_2$D_IN;
	if (window2_3_3$EN)
	  window2_3_3 <= `BSV_ASSIGNMENT_DELAY window2_3_3$D_IN;
	if (window2_3_4$EN)
	  window2_3_4 <= `BSV_ASSIGNMENT_DELAY window2_3_4$D_IN;
	if (window2_3_5$EN)
	  window2_3_5 <= `BSV_ASSIGNMENT_DELAY window2_3_5$D_IN;
	if (window2_3_6$EN)
	  window2_3_6 <= `BSV_ASSIGNMENT_DELAY window2_3_6$D_IN;
	if (window2_3_7$EN)
	  window2_3_7 <= `BSV_ASSIGNMENT_DELAY window2_3_7$D_IN;
	if (window2_4_0$EN)
	  window2_4_0 <= `BSV_ASSIGNMENT_DELAY window2_4_0$D_IN;
	if (window2_4_1$EN)
	  window2_4_1 <= `BSV_ASSIGNMENT_DELAY window2_4_1$D_IN;
	if (window2_4_2$EN)
	  window2_4_2 <= `BSV_ASSIGNMENT_DELAY window2_4_2$D_IN;
	if (window2_4_3$EN)
	  window2_4_3 <= `BSV_ASSIGNMENT_DELAY window2_4_3$D_IN;
	if (window2_4_4$EN)
	  window2_4_4 <= `BSV_ASSIGNMENT_DELAY window2_4_4$D_IN;
	if (window2_4_5$EN)
	  window2_4_5 <= `BSV_ASSIGNMENT_DELAY window2_4_5$D_IN;
	if (window2_4_6$EN)
	  window2_4_6 <= `BSV_ASSIGNMENT_DELAY window2_4_6$D_IN;
	if (window2_4_7$EN)
	  window2_4_7 <= `BSV_ASSIGNMENT_DELAY window2_4_7$D_IN;
	if (window2_5_0$EN)
	  window2_5_0 <= `BSV_ASSIGNMENT_DELAY window2_5_0$D_IN;
	if (window2_5_1$EN)
	  window2_5_1 <= `BSV_ASSIGNMENT_DELAY window2_5_1$D_IN;
	if (window2_5_2$EN)
	  window2_5_2 <= `BSV_ASSIGNMENT_DELAY window2_5_2$D_IN;
	if (window2_5_3$EN)
	  window2_5_3 <= `BSV_ASSIGNMENT_DELAY window2_5_3$D_IN;
	if (window2_5_4$EN)
	  window2_5_4 <= `BSV_ASSIGNMENT_DELAY window2_5_4$D_IN;
	if (window2_5_5$EN)
	  window2_5_5 <= `BSV_ASSIGNMENT_DELAY window2_5_5$D_IN;
	if (window2_5_6$EN)
	  window2_5_6 <= `BSV_ASSIGNMENT_DELAY window2_5_6$D_IN;
	if (window2_5_7$EN)
	  window2_5_7 <= `BSV_ASSIGNMENT_DELAY window2_5_7$D_IN;
	if (window2_6_0$EN)
	  window2_6_0 <= `BSV_ASSIGNMENT_DELAY window2_6_0$D_IN;
	if (window2_6_1$EN)
	  window2_6_1 <= `BSV_ASSIGNMENT_DELAY window2_6_1$D_IN;
	if (window2_6_2$EN)
	  window2_6_2 <= `BSV_ASSIGNMENT_DELAY window2_6_2$D_IN;
	if (window2_6_3$EN)
	  window2_6_3 <= `BSV_ASSIGNMENT_DELAY window2_6_3$D_IN;
	if (window2_6_4$EN)
	  window2_6_4 <= `BSV_ASSIGNMENT_DELAY window2_6_4$D_IN;
	if (window2_6_5$EN)
	  window2_6_5 <= `BSV_ASSIGNMENT_DELAY window2_6_5$D_IN;
	if (window2_6_6$EN)
	  window2_6_6 <= `BSV_ASSIGNMENT_DELAY window2_6_6$D_IN;
	if (window2_6_7$EN)
	  window2_6_7 <= `BSV_ASSIGNMENT_DELAY window2_6_7$D_IN;
	if (window2_7_0$EN)
	  window2_7_0 <= `BSV_ASSIGNMENT_DELAY window2_7_0$D_IN;
	if (window2_7_1$EN)
	  window2_7_1 <= `BSV_ASSIGNMENT_DELAY window2_7_1$D_IN;
	if (window2_7_2$EN)
	  window2_7_2 <= `BSV_ASSIGNMENT_DELAY window2_7_2$D_IN;
	if (window2_7_3$EN)
	  window2_7_3 <= `BSV_ASSIGNMENT_DELAY window2_7_3$D_IN;
	if (window2_7_4$EN)
	  window2_7_4 <= `BSV_ASSIGNMENT_DELAY window2_7_4$D_IN;
	if (window2_7_5$EN)
	  window2_7_5 <= `BSV_ASSIGNMENT_DELAY window2_7_5$D_IN;
	if (window2_7_6$EN)
	  window2_7_6 <= `BSV_ASSIGNMENT_DELAY window2_7_6$D_IN;
	if (window2_7_7$EN)
	  window2_7_7 <= `BSV_ASSIGNMENT_DELAY window2_7_7$D_IN;
	if (window_0_0$EN)
	  window_0_0 <= `BSV_ASSIGNMENT_DELAY window_0_0$D_IN;
	if (window_0_1$EN)
	  window_0_1 <= `BSV_ASSIGNMENT_DELAY window_0_1$D_IN;
	if (window_0_2$EN)
	  window_0_2 <= `BSV_ASSIGNMENT_DELAY window_0_2$D_IN;
	if (window_0_3$EN)
	  window_0_3 <= `BSV_ASSIGNMENT_DELAY window_0_3$D_IN;
	if (window_0_4$EN)
	  window_0_4 <= `BSV_ASSIGNMENT_DELAY window_0_4$D_IN;
	if (window_0_5$EN)
	  window_0_5 <= `BSV_ASSIGNMENT_DELAY window_0_5$D_IN;
	if (window_0_6$EN)
	  window_0_6 <= `BSV_ASSIGNMENT_DELAY window_0_6$D_IN;
	if (window_0_7$EN)
	  window_0_7 <= `BSV_ASSIGNMENT_DELAY window_0_7$D_IN;
	if (window_1_0$EN)
	  window_1_0 <= `BSV_ASSIGNMENT_DELAY window_1_0$D_IN;
	if (window_1_1$EN)
	  window_1_1 <= `BSV_ASSIGNMENT_DELAY window_1_1$D_IN;
	if (window_1_2$EN)
	  window_1_2 <= `BSV_ASSIGNMENT_DELAY window_1_2$D_IN;
	if (window_1_3$EN)
	  window_1_3 <= `BSV_ASSIGNMENT_DELAY window_1_3$D_IN;
	if (window_1_4$EN)
	  window_1_4 <= `BSV_ASSIGNMENT_DELAY window_1_4$D_IN;
	if (window_1_5$EN)
	  window_1_5 <= `BSV_ASSIGNMENT_DELAY window_1_5$D_IN;
	if (window_1_6$EN)
	  window_1_6 <= `BSV_ASSIGNMENT_DELAY window_1_6$D_IN;
	if (window_1_7$EN)
	  window_1_7 <= `BSV_ASSIGNMENT_DELAY window_1_7$D_IN;
	if (window_2_0$EN)
	  window_2_0 <= `BSV_ASSIGNMENT_DELAY window_2_0$D_IN;
	if (window_2_1$EN)
	  window_2_1 <= `BSV_ASSIGNMENT_DELAY window_2_1$D_IN;
	if (window_2_2$EN)
	  window_2_2 <= `BSV_ASSIGNMENT_DELAY window_2_2$D_IN;
	if (window_2_3$EN)
	  window_2_3 <= `BSV_ASSIGNMENT_DELAY window_2_3$D_IN;
	if (window_2_4$EN)
	  window_2_4 <= `BSV_ASSIGNMENT_DELAY window_2_4$D_IN;
	if (window_2_5$EN)
	  window_2_5 <= `BSV_ASSIGNMENT_DELAY window_2_5$D_IN;
	if (window_2_6$EN)
	  window_2_6 <= `BSV_ASSIGNMENT_DELAY window_2_6$D_IN;
	if (window_2_7$EN)
	  window_2_7 <= `BSV_ASSIGNMENT_DELAY window_2_7$D_IN;
	if (window_3_0$EN)
	  window_3_0 <= `BSV_ASSIGNMENT_DELAY window_3_0$D_IN;
	if (window_3_1$EN)
	  window_3_1 <= `BSV_ASSIGNMENT_DELAY window_3_1$D_IN;
	if (window_3_2$EN)
	  window_3_2 <= `BSV_ASSIGNMENT_DELAY window_3_2$D_IN;
	if (window_3_3$EN)
	  window_3_3 <= `BSV_ASSIGNMENT_DELAY window_3_3$D_IN;
	if (window_3_4$EN)
	  window_3_4 <= `BSV_ASSIGNMENT_DELAY window_3_4$D_IN;
	if (window_3_5$EN)
	  window_3_5 <= `BSV_ASSIGNMENT_DELAY window_3_5$D_IN;
	if (window_3_6$EN)
	  window_3_6 <= `BSV_ASSIGNMENT_DELAY window_3_6$D_IN;
	if (window_3_7$EN)
	  window_3_7 <= `BSV_ASSIGNMENT_DELAY window_3_7$D_IN;
	if (window_4_0$EN)
	  window_4_0 <= `BSV_ASSIGNMENT_DELAY window_4_0$D_IN;
	if (window_4_1$EN)
	  window_4_1 <= `BSV_ASSIGNMENT_DELAY window_4_1$D_IN;
	if (window_4_2$EN)
	  window_4_2 <= `BSV_ASSIGNMENT_DELAY window_4_2$D_IN;
	if (window_4_3$EN)
	  window_4_3 <= `BSV_ASSIGNMENT_DELAY window_4_3$D_IN;
	if (window_4_4$EN)
	  window_4_4 <= `BSV_ASSIGNMENT_DELAY window_4_4$D_IN;
	if (window_4_5$EN)
	  window_4_5 <= `BSV_ASSIGNMENT_DELAY window_4_5$D_IN;
	if (window_4_6$EN)
	  window_4_6 <= `BSV_ASSIGNMENT_DELAY window_4_6$D_IN;
	if (window_4_7$EN)
	  window_4_7 <= `BSV_ASSIGNMENT_DELAY window_4_7$D_IN;
	if (window_5_0$EN)
	  window_5_0 <= `BSV_ASSIGNMENT_DELAY window_5_0$D_IN;
	if (window_5_1$EN)
	  window_5_1 <= `BSV_ASSIGNMENT_DELAY window_5_1$D_IN;
	if (window_5_2$EN)
	  window_5_2 <= `BSV_ASSIGNMENT_DELAY window_5_2$D_IN;
	if (window_5_3$EN)
	  window_5_3 <= `BSV_ASSIGNMENT_DELAY window_5_3$D_IN;
	if (window_5_4$EN)
	  window_5_4 <= `BSV_ASSIGNMENT_DELAY window_5_4$D_IN;
	if (window_5_5$EN)
	  window_5_5 <= `BSV_ASSIGNMENT_DELAY window_5_5$D_IN;
	if (window_5_6$EN)
	  window_5_6 <= `BSV_ASSIGNMENT_DELAY window_5_6$D_IN;
	if (window_5_7$EN)
	  window_5_7 <= `BSV_ASSIGNMENT_DELAY window_5_7$D_IN;
	if (window_6_0$EN)
	  window_6_0 <= `BSV_ASSIGNMENT_DELAY window_6_0$D_IN;
	if (window_6_1$EN)
	  window_6_1 <= `BSV_ASSIGNMENT_DELAY window_6_1$D_IN;
	if (window_6_2$EN)
	  window_6_2 <= `BSV_ASSIGNMENT_DELAY window_6_2$D_IN;
	if (window_6_3$EN)
	  window_6_3 <= `BSV_ASSIGNMENT_DELAY window_6_3$D_IN;
	if (window_6_4$EN)
	  window_6_4 <= `BSV_ASSIGNMENT_DELAY window_6_4$D_IN;
	if (window_6_5$EN)
	  window_6_5 <= `BSV_ASSIGNMENT_DELAY window_6_5$D_IN;
	if (window_6_6$EN)
	  window_6_6 <= `BSV_ASSIGNMENT_DELAY window_6_6$D_IN;
	if (window_6_7$EN)
	  window_6_7 <= `BSV_ASSIGNMENT_DELAY window_6_7$D_IN;
	if (window_7_0$EN)
	  window_7_0 <= `BSV_ASSIGNMENT_DELAY window_7_0$D_IN;
	if (window_7_1$EN)
	  window_7_1 <= `BSV_ASSIGNMENT_DELAY window_7_1$D_IN;
	if (window_7_2$EN)
	  window_7_2 <= `BSV_ASSIGNMENT_DELAY window_7_2$D_IN;
	if (window_7_3$EN)
	  window_7_3 <= `BSV_ASSIGNMENT_DELAY window_7_3$D_IN;
	if (window_7_4$EN)
	  window_7_4 <= `BSV_ASSIGNMENT_DELAY window_7_4$D_IN;
	if (window_7_5$EN)
	  window_7_5 <= `BSV_ASSIGNMENT_DELAY window_7_5$D_IN;
	if (window_7_6$EN)
	  window_7_6 <= `BSV_ASSIGNMENT_DELAY window_7_6$D_IN;
	if (window_7_7$EN)
	  window_7_7 <= `BSV_ASSIGNMENT_DELAY window_7_7$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    _unnamed_ = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__0_1 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__1 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__1_1 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__2 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__2_1 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__3 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__3_1 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__4 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__4_1 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__5 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__5_1 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__6 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__6_1 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__7 = 64'hAAAAAAAAAAAAAAAA;
    _unnamed__7_1 = 64'hAAAAAAAAAAAAAAAA;
    count = 4'hA;
    kernel = 4'hA;
    p0_rv = 2'h2;
    p1_rv = 2'h2;
    p2_rv = 2'h2;
    p3_rv = 2'h2;
    shift_amount = 10'h2AA;
    window2_0_0 = 8'hAA;
    window2_0_1 = 8'hAA;
    window2_0_2 = 8'hAA;
    window2_0_3 = 8'hAA;
    window2_0_4 = 8'hAA;
    window2_0_5 = 8'hAA;
    window2_0_6 = 8'hAA;
    window2_0_7 = 8'hAA;
    window2_1_0 = 8'hAA;
    window2_1_1 = 8'hAA;
    window2_1_2 = 8'hAA;
    window2_1_3 = 8'hAA;
    window2_1_4 = 8'hAA;
    window2_1_5 = 8'hAA;
    window2_1_6 = 8'hAA;
    window2_1_7 = 8'hAA;
    window2_2_0 = 8'hAA;
    window2_2_1 = 8'hAA;
    window2_2_2 = 8'hAA;
    window2_2_3 = 8'hAA;
    window2_2_4 = 8'hAA;
    window2_2_5 = 8'hAA;
    window2_2_6 = 8'hAA;
    window2_2_7 = 8'hAA;
    window2_3_0 = 8'hAA;
    window2_3_1 = 8'hAA;
    window2_3_2 = 8'hAA;
    window2_3_3 = 8'hAA;
    window2_3_4 = 8'hAA;
    window2_3_5 = 8'hAA;
    window2_3_6 = 8'hAA;
    window2_3_7 = 8'hAA;
    window2_4_0 = 8'hAA;
    window2_4_1 = 8'hAA;
    window2_4_2 = 8'hAA;
    window2_4_3 = 8'hAA;
    window2_4_4 = 8'hAA;
    window2_4_5 = 8'hAA;
    window2_4_6 = 8'hAA;
    window2_4_7 = 8'hAA;
    window2_5_0 = 8'hAA;
    window2_5_1 = 8'hAA;
    window2_5_2 = 8'hAA;
    window2_5_3 = 8'hAA;
    window2_5_4 = 8'hAA;
    window2_5_5 = 8'hAA;
    window2_5_6 = 8'hAA;
    window2_5_7 = 8'hAA;
    window2_6_0 = 8'hAA;
    window2_6_1 = 8'hAA;
    window2_6_2 = 8'hAA;
    window2_6_3 = 8'hAA;
    window2_6_4 = 8'hAA;
    window2_6_5 = 8'hAA;
    window2_6_6 = 8'hAA;
    window2_6_7 = 8'hAA;
    window2_7_0 = 8'hAA;
    window2_7_1 = 8'hAA;
    window2_7_2 = 8'hAA;
    window2_7_3 = 8'hAA;
    window2_7_4 = 8'hAA;
    window2_7_5 = 8'hAA;
    window2_7_6 = 8'hAA;
    window2_7_7 = 8'hAA;
    window_0_0 = 8'hAA;
    window_0_1 = 8'hAA;
    window_0_2 = 8'hAA;
    window_0_3 = 8'hAA;
    window_0_4 = 8'hAA;
    window_0_5 = 8'hAA;
    window_0_6 = 8'hAA;
    window_0_7 = 8'hAA;
    window_1_0 = 8'hAA;
    window_1_1 = 8'hAA;
    window_1_2 = 8'hAA;
    window_1_3 = 8'hAA;
    window_1_4 = 8'hAA;
    window_1_5 = 8'hAA;
    window_1_6 = 8'hAA;
    window_1_7 = 8'hAA;
    window_2_0 = 8'hAA;
    window_2_1 = 8'hAA;
    window_2_2 = 8'hAA;
    window_2_3 = 8'hAA;
    window_2_4 = 8'hAA;
    window_2_5 = 8'hAA;
    window_2_6 = 8'hAA;
    window_2_7 = 8'hAA;
    window_3_0 = 8'hAA;
    window_3_1 = 8'hAA;
    window_3_2 = 8'hAA;
    window_3_3 = 8'hAA;
    window_3_4 = 8'hAA;
    window_3_5 = 8'hAA;
    window_3_6 = 8'hAA;
    window_3_7 = 8'hAA;
    window_4_0 = 8'hAA;
    window_4_1 = 8'hAA;
    window_4_2 = 8'hAA;
    window_4_3 = 8'hAA;
    window_4_4 = 8'hAA;
    window_4_5 = 8'hAA;
    window_4_6 = 8'hAA;
    window_4_7 = 8'hAA;
    window_5_0 = 8'hAA;
    window_5_1 = 8'hAA;
    window_5_2 = 8'hAA;
    window_5_3 = 8'hAA;
    window_5_4 = 8'hAA;
    window_5_5 = 8'hAA;
    window_5_6 = 8'hAA;
    window_5_7 = 8'hAA;
    window_6_0 = 8'hAA;
    window_6_1 = 8'hAA;
    window_6_2 = 8'hAA;
    window_6_3 = 8'hAA;
    window_6_4 = 8'hAA;
    window_6_5 = 8'hAA;
    window_6_6 = 8'hAA;
    window_6_7 = 8'hAA;
    window_7_0 = 8'hAA;
    window_7_1 = 8'hAA;
    window_7_2 = 8'hAA;
    window_7_3 = 8'hAA;
    window_7_4 = 8'hAA;
    window_7_5 = 8'hAA;
    window_7_6 = 8'hAA;
    window_7_7 = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkCoalesce3

